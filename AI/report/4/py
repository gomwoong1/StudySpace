import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

class SimpleLogisticRegression():
    
    coef_, intercept_, y_pred = None, None, None
    z = None
    
    def sigmoid(self, x):
        return 1 / (1 + np.exp(-x))
    
    def fit(self, x_data, y_data):
        a = 0
        b = 0
        lr = 0.05
        epochs = 2000
        
        for i in range(epochs + 1):
            for x, y in zip(x_data, y_data):
                a_diff = x*(self.sigmoid(a*x+ b) - y) 
                b_diff = self.sigmoid(a*x+ b) - y
                a = a - lr * a_diff
                b = b - lr * b_diff

        self.coef_ = a
        self.intercept_ = b

    def predict(self, x_data):
        z = self.coef_ * x_data + self.intercept_
        y_pred = self.sigmoid(z)
        # return np.round(y_pred)
        return y_pred
    
    def score(self, x_data, y_data):
        y_pred = self.predict(x_data)
        accuracy = np.mean(y_pred == y_data)
        return accuracy

# 테스트 데이터 생성
x_data = np.array([[2], [4], [6], [8], [10], [12], [14]])
y_data = np.array([0, 0, 0, 1, 1, 1, 1])

# 모델 학습 및 평가
slr = SimpleLogisticRegression()
slr.fit(x_data, y_data)
print("coef_:", slr.coef_)
print("intercept_:", slr.intercept_)
print("Accuracy:", slr.score(x_data, y_data))

# 예측
x_new = np.array([[13]])
y_new = slr.predict(x_new)
print("Predictions:", y_new)