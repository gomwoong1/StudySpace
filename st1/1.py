# 자료형
# 숫자형(정수형, 실수형), 문자형, 불
# 리스트[1,2,3], 튜플(1,2,3), 딕셔너리{'1':'하나', '2':'둘', '3':'셋'}

# 형변환
# int(val), float(val), str(val), list(val)

# --------------------------------------------------------------

# 문자열
# ''', """ 는 여러 줄 저장할 때 사용 가능

# 슬라이싱 [시작 인덱싱:해당 인덱싱 전까지]
# str = 'coding' >> str[1:3] >> 'od'

# split()
# str = 'hello world' >> str.split() >> ['hello', 'world']

# docstring
# """, ''' 자체를 주석으로 사용하는 것.
# 컴파일러가 알아서 주석으로 이해함

# end
# print('hello', end='world') >> 'helloworld'

# + 연산자는 두 문자열을 붙여주고, * 연산자는 곱한 수만큼 반복해서 출력함

# --------------------------------------------------------------

# 포맷팅
# str = 'hello %s' % 'world'
# int = '%d %d' % (1, 2)
# fla = '%f' % 3.14
# 'hello {}'.format('world')
# '{} X {} = {}'.format(2, 3, 2*3)
# '{1} X {0} = {2}'.format(2, 3, 2*3)  >> 3 x 2 = 6

# 인덱싱
# 타 언어와 같음, 단 음수값으로 인덱싱하면 뒤에서부터 역으로 시작함


# --------------------------------------------------------------

# 리스트
# 빈 리스트 만들기 
# my_list = []

# 값이 든 리스트 만들기 
# my list = [1, 2, 3]

# my_list.append(4) >> [1, 2, 3, 4]
# 없는 리스트에 append 메서드 사용하려면 에러 발생

# del my_list[3] >> [1, 2, 3]

# 리스트는 인덱싱 넘버와 슬라이싱으로 값 접근, 출력이 가능함

# list.sort()
# list.count(1) >> 1

# len(my_list) >> 3

# --------------------------------------------------------------

# 튜플
# 빈 튜플 만들기
# my_tuple = ()

# 값이 든 튜플 만들기
# my_tuple = (1, 2, 3)
# my_tuple = 1, 2, 3   >> 소괄호 없이 만들어도 튜플로 선언됨

# packing
# my_tuple = 1, 2, 3

# unpacking
# num1, num2, num3 = my_tuple

# num1, num2 = num2, num1   >> 두 변수의 값이 서로 바뀜

# --------------------------------------------------------------

# 딕셔너리

# 생성
# dic = {'key':'val', 'key':'val'}

# 값 추가
# dic['key'] = 'val'   >>    {'key':'val'} 식으로 값 추가 가능

# 값 출력
# print(dic['key'])  >>   val 식으로 출력 가능

# 값 삭제
#	del dic['key'] >> 'key'의 키와 값 모두 삭제

# dic.values()
# 값만 가져옴

# dic.keys()
# 키만 가져옴

# dic.items()
# 키와 값 모두 가져옴

# --------------------------------------------------------------

# for
# for 변수 in 컨테이너:
# 	수행 내용

# range(시작숫자, 마감숫자)

# comprehension
# [출력표현식 for 변수 in 자료컨테이너 if 조건문]

# --------------------------------------------------------------

# membership 연산자
# my_list = [1,2,3,4,5]

# 2 in my_list >> True
# '2' in my_list >> False

# --------------------------------------------------------------

# if 조건:
# 	실행문
# elif 조건:
# 	실행문
# else:
# 	실행문

# --------------------------------------------------------------

# while 조건:
# 	실행문

#	continue와 break문은 당연히 있음

# --------------------------------------------------------------

# 함수
